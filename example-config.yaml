# Homeserver details
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: https://matrix.org
    # The domain of the homeserver (for MXIDs, etc).
    domain: matrix.org
    # Whether or not to verify the SSL certificate of the homeserver.
    # Only applies if address starts with https://
    verify_ssl: true

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:
    # The protocol the homeserver should use when connecting to this appservice.
    # Usually "http" or "https".
    protocol: http

    # The hostname and port where the homeserver can find this appservice.
    hostname: localhost
    port: 8080

    # The full URI to the database.
    database: sqlite:///mautrix-telegram.db

    # Public part of web server for out-of-Matrix interaction with the bridge.
    # Used for things like login if the user wants to make sure the 2FA password isn't stored in
    # the HS database.
    public:
        # Whether or not the public-facing endpoints should be enabled.
        enabled: true
        # The prefix to use in the public-facing endpoints.
        prefix: /public
        # The base URL where the public-facing endpoints are available. The prefix is not added
        # implicitly.
        external: https://example.com/public

    # Whether or not to enable debug messages in the console.
    debug: true

    # The unique ID of this appservice.
    id: telegram
    # Username of the appservice bot.
    bot_username: telegrambot
    bot_displayname: Telegram bridge bot

    # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
    as_token: "This value is generated when generating the registration"
    hs_token: "This value is generated when generating the registration"

# Prometheus telemetry config. Requires prometheus-aio to be installed.
metrics:
    enabled: false
    listen_port: 8000

# Bridge config
bridge:
    # Localpart template of MXIDs for Telegram users.
    # {userid} is replaced with the user ID of the Telegram user.
    username_template: "telegram_{userid}"
    # Localpart template of room aliases for Telegram portal rooms.
    # {groupname} is replaced with the name part of the public channel/group invite link ( https://t.me/{} )
    alias_template: "telegram_{groupname}"
    # Displayname template for Telegram users.
    # {displayname} is replaced with the display name of the Telegram user.
    displayname_template: "{displayname} (Telegram)"

    # Set the preferred order of user identifiers which to use in the Matrix puppet display name.
    # In the (hopefully unlikely) scenario that none of the given keys are found, the numeric user
    # ID is used.
    #
    # If the bridge is working properly, a phone number or an username should always be known, but
    # the other one can very well be empty.
    #
    # Valid keys:
    #   "full name"          (First and/or last name)
    #   "full name reversed" (Last and/or first name)
    #   "first name"
    #   "last name"
    #   "username"
    #   "phone number"
    displayname_preference:
    - full name
    - username
    - phone number

    # Show message editing as a reply to the original message.
    # If this is false, message edits are not shown at all, as Matrix does not support editing yet.
    edits_as_replies: false
    # Highlight changed/added parts in edits. Requires lxml.
    highlight_edits: false
    # Whether or not Matrix bot messages (type m.notice) should be bridged.
    bridge_notices: true
    # Maximum number of members to sync per portal when starting up. Other members will be
    # synced when they send messages. The maximum is 10000, after which the Telegram server
    # will not send any more members.
    # Defaults to no local limit (-> limited to 10000 by server)
    max_initial_member_sync: -1
    # The maximum number of simultaneous Telegram deletions to handle.
    # A large number of simultaneous redactions could put strain on your homeserver.
    max_telegram_delete: 10
    # Allow logging in within Matrix. If false, the only way to log in is using the out-of-Matrix
    # login website (see appservice.public config section)
    allow_matrix_login: true
    # Use inline images instead of m.image to make rich captions possible.
    # N.B. Inline images are not supported on all clients (e.g. Riot iOS).
    inline_images: false
    # Whether or not to bridge plaintext highlights.
    # Only enable this if your displayname_template has some static part that the bridge can use to
    # reliably identify what is a plaintext highlight.
    plaintext_highlights: false
    # Whether or not to make portals of publicly joinable channels/supergroups publicly joinable on Matrix.
    public_portals: true
    # Whether to send stickers as the new native m.sticker type or normal m.images.
    # Old versions of Riot don't support the new type at all.
    #
    # Remember that proper sticker support always requires Pillow to convert webp into png.
    native_stickers: true

    # The prefix for commands. Only required in non-management rooms.
    command_prefix: "!tg"

    # Permissions for using the bridge.
    # Permitted values:
    #   relaybot - Only use the bridge via the relaybot, no access to commands.
    #       full - Full access to use the bridge via relaybot or logging in with Telegram account.
    #      admin - Full access to use the bridge and some extra administration commands.
    # Permitted keys:
    #        * - All Matrix users
    #   domain - All users on that homeserver
    #     mxid - Specific user
    permissions:
        "*": "relaybot"
        "example.com": "full"
        "public.example.com": "full"
        "@admin:example.com": "admin"

    # Options related to the message relay Telegram bot.
    relaybot:
        # Whether or not to allow creating portals from Telegram.
        authless_portals: true
        # Whether or not to allow Telegram group admins to use the bot commands.
        whitelist_group_admins: true
        # List of usernames/user IDs who are also allowed to use the bot commands.
        whitelist:
        - myusername
        - 12345678

# Telegram config
telegram:
    # Get your own API keys at https://my.telegram.org/apps
    api_id: 12345
    api_hash: tjyd5yge35lbodk1xwzw2jstp90k55qz
    # (Optional) Create your own bot at https://t.me/BotFather
    bot_token: disabled
